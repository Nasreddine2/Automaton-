{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Musha\\\\Desktop\\\\DAAR\\\\projet\\\\Projet 1\\\\Automaton-\\\\Client\\\\src\\\\app\\\\chart.js\",\n  _s = $RefreshSig$();\n// ExecutionTimeChart.js\nimport React from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst ExecutionTimeChart = ({\n  isKMP,\n  Times,\n  egrepTimes\n}) => {\n  _s();\n  React.useEffect(() => {\n    const ctx = document.getElementById(\"executionTimeChart\").getContext(\"2d\");\n    const chart = new Chart(ctx, {\n      type: \"bar\",\n      // Changez à 'line' si vous préférez un graphique linéaire\n      data: {\n        labels: Times.map((_, index) => `Iteration ${index + 1}`),\n        // Labels pour chaque itération\n        datasets: [{\n          label: isKMP ? \"KMP Execution Time (ms)\" : \"Automate Execution Time (ms)\",\n          data: Times,\n          backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n          borderColor: \"rgba(75, 192, 192, 1)\",\n          borderWidth: 1\n        }, {\n          label: \"egrep Execution Time (ms)\",\n          data: egrepTimes,\n          backgroundColor: \"rgba(255, 99, 132, 0.6)\",\n          borderColor: \"rgba(255, 99, 132, 1)\",\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: \"Execution Time (ms)\"\n            }\n          },\n          x: {\n            title: {\n              display: true,\n              text: \"Iterations\"\n            }\n          }\n        },\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n            position: \"top\"\n          }\n        }\n      }\n    });\n\n    // Cleanup the chart when the component unmounts\n    return () => {\n      chart.destroy();\n    };\n  }, [Times, egrepTimes]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"executionTimeChart\",\n    width: \"400\",\n    height: \"200\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n};\n_s(ExecutionTimeChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ExecutionTimeChart;\nexport default ExecutionTimeChart;\nvar _c;\n$RefreshReg$(_c, \"ExecutionTimeChart\");","map":{"version":3,"names":["React","Chart","registerables","jsxDEV","_jsxDEV","register","ExecutionTimeChart","isKMP","Times","egrepTimes","_s","useEffect","ctx","document","getElementById","getContext","chart","type","data","labels","map","_","index","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","title","display","text","x","responsive","plugins","legend","position","destroy","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Musha/Desktop/DAAR/projet/Projet 1/Automaton-/Client/src/app/chart.js"],"sourcesContent":["// ExecutionTimeChart.js\r\nimport React from \"react\";\r\nimport { Chart, registerables } from \"chart.js\";\r\n\r\nChart.register(...registerables);\r\n\r\nconst ExecutionTimeChart = ({ isKMP, Times, egrepTimes }) => {\r\n  React.useEffect(() => {\r\n    const ctx = document.getElementById(\"executionTimeChart\").getContext(\"2d\");\r\n\r\n    const chart = new Chart(ctx, {\r\n      type: \"bar\", // Changez à 'line' si vous préférez un graphique linéaire\r\n      data: {\r\n        labels: Times.map((_, index) => `Iteration ${index + 1}`), // Labels pour chaque itération\r\n        datasets: [\r\n          {\r\n            label: isKMP\r\n              ? \"KMP Execution Time (ms)\"\r\n              : \"Automate Execution Time (ms)\",\r\n            data: Times,\r\n            backgroundColor: \"rgba(75, 192, 192, 0.6)\",\r\n            borderColor: \"rgba(75, 192, 192, 1)\",\r\n            borderWidth: 1,\r\n          },\r\n          {\r\n            label: \"egrep Execution Time (ms)\",\r\n            data: egrepTimes,\r\n            backgroundColor: \"rgba(255, 99, 132, 0.6)\",\r\n            borderColor: \"rgba(255, 99, 132, 1)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            title: {\r\n              display: true,\r\n              text: \"Execution Time (ms)\",\r\n            },\r\n          },\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: \"Iterations\",\r\n            },\r\n          },\r\n        },\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            display: true,\r\n            position: \"top\",\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    // Cleanup the chart when the component unmounts\r\n    return () => {\r\n      chart.destroy();\r\n    };\r\n  }, [Times, egrepTimes]);\r\n\r\n  return <canvas id=\"executionTimeChart\" width=\"400\" height=\"200\"></canvas>;\r\n};\r\n\r\nexport default ExecutionTimeChart;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhDH,KAAK,CAACI,QAAQ,CAAC,GAAGH,aAAa,CAAC;AAEhC,MAAMI,kBAAkB,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC3DV,KAAK,CAACW,SAAS,CAAC,MAAM;IACpB,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;IAE1E,MAAMC,KAAK,GAAG,IAAIf,KAAK,CAACW,GAAG,EAAE;MAC3BK,IAAI,EAAE,KAAK;MAAE;MACbC,IAAI,EAAE;QACJC,MAAM,EAAEX,KAAK,CAACY,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK,aAAaA,KAAK,GAAG,CAAC,EAAE,CAAC;QAAE;QAC3DC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAEjB,KAAK,GACR,yBAAyB,GACzB,8BAA8B;UAClCW,IAAI,EAAEV,KAAK;UACXiB,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE;QACf,CAAC,EACD;UACEH,KAAK,EAAE,2BAA2B;UAClCN,IAAI,EAAET,UAAU;UAChBgB,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE,IAAI;YACjBC,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR;UACF,CAAC;UACDC,CAAC,EAAE;YACDH,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR;UACF;QACF,CAAC;QACDE,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNL,OAAO,EAAE,IAAI;YACbM,QAAQ,EAAE;UACZ;QACF;MACF;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXvB,KAAK,CAACwB,OAAO,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,CAAChC,KAAK,EAAEC,UAAU,CAAC,CAAC;EAEvB,oBAAOL,OAAA;IAAQqC,EAAE,EAAC,oBAAoB;IAACC,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAC3E,CAAC;AAACrC,EAAA,CA5DIJ,kBAAkB;AAAA0C,EAAA,GAAlB1C,kBAAkB;AA8DxB,eAAeA,kBAAkB;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}