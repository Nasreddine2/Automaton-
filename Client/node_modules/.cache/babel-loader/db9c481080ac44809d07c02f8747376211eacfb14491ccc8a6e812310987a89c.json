{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Musha\\\\Desktop\\\\DAAR\\\\projet\\\\Projet 1\\\\Automaton-\\\\Client\\\\src\\\\app\\\\component\\\\tableau.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsTable = ({\n  timesearch,\n  isKMP\n}) => {\n  // Vérifier si timesearch existe\n  if (!timesearch) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Aucun r\\xE9sultat \\xE0 afficher.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Vérifier si results et egrep sont des tableaux et s'ils ont des longueurs valides\n  const resultsExist = Array.isArray(timesearch.results) && timesearch.results.length > 0;\n  const egrepExist = Array.isArray(timesearch.egrep) && timesearch.egrep.length > 0;\n\n  // Si aucune des deux listes n'a de résultats\n  if (!resultsExist && !egrepExist) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Aucun r\\xE9sultat \\xE0 afficher.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Calculer le nombre maximum d'itérations\n  const maxLength = Math.max(resultsExist ? timesearch.results.length : 0, egrepExist ? timesearch.egrep.length : 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"R\\xE9sultats du test de Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [isKMP ? /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            className: \"text-center\",\n            children: \"KMP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            className: \"text-center\",\n            children: \"Automate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            className: \"text-center\",\n            children: \"Commande egrep\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Iteration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temps d'Ex\\xE9cution (ms)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Iteration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temps d'Ex\\xE9cution (ms)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.from({\n          length: maxLength\n        }).map((_, index) => {\n          var _timesearch$results$i, _timesearch$results$i2, _timesearch$egrep$ind, _timesearch$egrep$ind2;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: resultsExist && (_timesearch$results$i = timesearch.results[index]) !== null && _timesearch$results$i !== void 0 && _timesearch$results$i.iteration ? timesearch.results[index].iteration : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: resultsExist && (_timesearch$results$i2 = timesearch.results[index]) !== null && _timesearch$results$i2 !== void 0 && _timesearch$results$i2.time ? timesearch.results[index].time.toFixed(3) : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: egrepExist && (_timesearch$egrep$ind = timesearch.egrep[index]) !== null && _timesearch$egrep$ind !== void 0 && _timesearch$egrep$ind.iteration ? timesearch.egrep[index].iteration : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: egrepExist && (_timesearch$egrep$ind2 = timesearch.egrep[index]) !== null && _timesearch$egrep$ind2 !== void 0 && _timesearch$egrep$ind2.executionTimeMs ? timesearch.egrep[index].executionTimeMs.toFixed(3) : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultsTable","timesearch","isKMP","className","children","fileName","_jsxFileName","lineNumber","columnNumber","resultsExist","Array","isArray","results","length","egrepExist","egrep","maxLength","Math","max","colSpan","from","map","_","index","_timesearch$results$i","_timesearch$results$i2","_timesearch$egrep$ind","_timesearch$egrep$ind2","iteration","time","toFixed","executionTimeMs","_c","$RefreshReg$"],"sources":["C:/Users/Musha/Desktop/DAAR/projet/Projet 1/Automaton-/Client/src/app/component/tableau.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst ResultsTable = ({ timesearch, isKMP }) => {\r\n  // Vérifier si timesearch existe\r\n  if (!timesearch) {\r\n    return <div className=\"text-center\">Aucun résultat à afficher.</div>;\r\n  }\r\n\r\n  // Vérifier si results et egrep sont des tableaux et s'ils ont des longueurs valides\r\n  const resultsExist =\r\n    Array.isArray(timesearch.results) && timesearch.results.length > 0;\r\n  const egrepExist =\r\n    Array.isArray(timesearch.egrep) && timesearch.egrep.length > 0;\r\n\r\n  // Si aucune des deux listes n'a de résultats\r\n  if (!resultsExist && !egrepExist) {\r\n    return <div className=\"text-center\">Aucun résultat à afficher.</div>;\r\n  }\r\n\r\n  // Calculer le nombre maximum d'itérations\r\n  const maxLength = Math.max(\r\n    resultsExist ? timesearch.results.length : 0,\r\n    egrepExist ? timesearch.egrep.length : 0\r\n  );\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"text-center mb-4\">Résultats du test de Performance</h2>\r\n      <table className=\"table table-bordered\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            {isKMP ? (\r\n              <th colSpan=\"2\" className=\"text-center\">\r\n                KMP\r\n              </th>\r\n            ) : (\r\n              <th colSpan=\"2\" className=\"text-center\">\r\n                Automate\r\n              </th>\r\n            )}\r\n            <th colSpan=\"2\" className=\"text-center\">\r\n              Commande egrep\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Iteration</th>\r\n            <th>Temps d'Exécution (ms)</th>\r\n            <th>Iteration</th>\r\n            <th>Temps d'Exécution (ms)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Affichage des résultats en fonction du maximum d'itérations */}\r\n          {Array.from({ length: maxLength }).map((_, index) => (\r\n            <tr key={index}>\r\n              <td>\r\n                {resultsExist && timesearch.results[index]?.iteration\r\n                  ? timesearch.results[index].iteration\r\n                  : \"-\"}\r\n              </td>\r\n              <td>\r\n                {resultsExist && timesearch.results[index]?.time\r\n                  ? timesearch.results[index].time.toFixed(3)\r\n                  : \"-\"}\r\n              </td>\r\n              <td>\r\n                {egrepExist && timesearch.egrep[index]?.iteration\r\n                  ? timesearch.egrep[index].iteration\r\n                  : \"-\"}\r\n              </td>\r\n              <td>\r\n                {egrepExist && timesearch.egrep[index]?.executionTimeMs\r\n                  ? timesearch.egrep[index].executionTimeMs.toFixed(3)\r\n                  : \"-\"}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsTable;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAM,CAAC,KAAK;EAC9C;EACA,IAAI,CAACD,UAAU,EAAE;IACf,oBAAOF,OAAA;MAAKI,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtE;;EAEA;EACA,MAAMC,YAAY,GAChBC,KAAK,CAACC,OAAO,CAACV,UAAU,CAACW,OAAO,CAAC,IAAIX,UAAU,CAACW,OAAO,CAACC,MAAM,GAAG,CAAC;EACpE,MAAMC,UAAU,GACdJ,KAAK,CAACC,OAAO,CAACV,UAAU,CAACc,KAAK,CAAC,IAAId,UAAU,CAACc,KAAK,CAACF,MAAM,GAAG,CAAC;;EAEhE;EACA,IAAI,CAACJ,YAAY,IAAI,CAACK,UAAU,EAAE;IAChC,oBAAOf,OAAA;MAAKI,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtE;;EAEA;EACA,MAAMQ,SAAS,GAAGC,IAAI,CAACC,GAAG,CACxBT,YAAY,GAAGR,UAAU,CAACW,OAAO,CAACC,MAAM,GAAG,CAAC,EAC5CC,UAAU,GAAGb,UAAU,CAACc,KAAK,CAACF,MAAM,GAAG,CACzC,CAAC;EAED,oBACEd,OAAA;IAAKI,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BL,OAAA;MAAII,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtET,OAAA;MAAOI,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACrCL,OAAA;QAAOI,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC5BL,OAAA;UAAAK,QAAA,GACGF,KAAK,gBACJH,OAAA;YAAIoB,OAAO,EAAC,GAAG;YAAChB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAExC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,gBAELT,OAAA;YAAIoB,OAAO,EAAC,GAAG;YAAChB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAExC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACL,eACDT,OAAA;YAAIoB,OAAO,EAAC,GAAG;YAAChB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAExC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACLT,OAAA;UAAAK,QAAA,gBACEL,OAAA;YAAAK,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBT,OAAA;YAAAK,QAAA,EAAI;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/BT,OAAA;YAAAK,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBT,OAAA;YAAAK,QAAA,EAAI;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRT,OAAA;QAAAK,QAAA,EAEGM,KAAK,CAACU,IAAI,CAAC;UAAEP,MAAM,EAAEG;QAAU,CAAC,CAAC,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK;UAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA;UAAA,oBAC9C5B,OAAA;YAAAK,QAAA,gBACEL,OAAA;cAAAK,QAAA,EACGK,YAAY,KAAAe,qBAAA,GAAIvB,UAAU,CAACW,OAAO,CAACW,KAAK,CAAC,cAAAC,qBAAA,eAAzBA,qBAAA,CAA2BI,SAAS,GACjD3B,UAAU,CAACW,OAAO,CAACW,KAAK,CAAC,CAACK,SAAS,GACnC;YAAG;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLT,OAAA;cAAAK,QAAA,EACGK,YAAY,KAAAgB,sBAAA,GAAIxB,UAAU,CAACW,OAAO,CAACW,KAAK,CAAC,cAAAE,sBAAA,eAAzBA,sBAAA,CAA2BI,IAAI,GAC5C5B,UAAU,CAACW,OAAO,CAACW,KAAK,CAAC,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,GACzC;YAAG;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLT,OAAA;cAAAK,QAAA,EACGU,UAAU,KAAAY,qBAAA,GAAIzB,UAAU,CAACc,KAAK,CAACQ,KAAK,CAAC,cAAAG,qBAAA,eAAvBA,qBAAA,CAAyBE,SAAS,GAC7C3B,UAAU,CAACc,KAAK,CAACQ,KAAK,CAAC,CAACK,SAAS,GACjC;YAAG;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLT,OAAA;cAAAK,QAAA,EACGU,UAAU,KAAAa,sBAAA,GAAI1B,UAAU,CAACc,KAAK,CAACQ,KAAK,CAAC,cAAAI,sBAAA,eAAvBA,sBAAA,CAAyBI,eAAe,GACnD9B,UAAU,CAACc,KAAK,CAACQ,KAAK,CAAC,CAACQ,eAAe,CAACD,OAAO,CAAC,CAAC,CAAC,GAClD;YAAG;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA,GApBEe,KAAK;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAqBV,CAAC;QAAA,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACwB,EAAA,GA/EIhC,YAAY;AAiFlB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}