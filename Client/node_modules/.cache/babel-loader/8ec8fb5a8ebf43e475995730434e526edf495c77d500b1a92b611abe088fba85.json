{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Musha\\\\Desktop\\\\DAAR\\\\projet\\\\Projet 1\\\\Automaton-\\\\src\\\\app\\\\egrep.js\",\n  _s = $RefreshSig$();\n// src/components/BookList.js\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport booksData from \"../books.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    // Charger les livres depuis le fichier JSON\n    const englishBooks = booksData.English;\n    setBooks(englishBooks);\n  }, []);\n  const getDownloadLink = link => {\n    return `https://www.gutenberg.org/cache/epub/${link}/pg${link}.txt`;\n  };\n  const downloadBook = async book => {\n    const downloadLink = getDownloadLink(book.link);\n    try {\n      // Faire une requête HTTP pour obtenir le fichier texte\n      const response = await axios.get(downloadLink, {\n        responseType: \"blob\" // Important: permet de traiter la réponse comme un fichier binaire\n      });\n\n      // Créer une URL pour le fichier téléchargé\n      const fileURL = window.URL.createObjectURL(new Blob([response.data]));\n      const fileLink = document.createElement(\"a\");\n      fileLink.href = fileURL;\n      fileLink.setAttribute(\"download\", `${book.Title}.txt`);\n\n      // Déclencher le téléchargement\n      document.body.appendChild(fileLink);\n      fileLink.click();\n      document.body.removeChild(fileLink);\n    } catch (error) {\n      console.error(\"Erreur lors du téléchargement du livre:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Books in English\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map((book, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: book.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", book.Author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => downloadBook(book),\n          children: \"Download TXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useEffect","useState","axios","booksData","jsxDEV","_jsxDEV","BookList","_s","books","setBooks","englishBooks","English","getDownloadLink","link","downloadBook","book","downloadLink","response","get","responseType","fileURL","window","URL","createObjectURL","Blob","data","fileLink","document","createElement","href","setAttribute","Title","body","appendChild","click","removeChild","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Author","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Musha/Desktop/DAAR/projet/Projet 1/Automaton-/src/app/egrep.js"],"sourcesContent":["// src/components/BookList.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport booksData from \"../books.json\";\r\n\r\nconst BookList = () => {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Charger les livres depuis le fichier JSON\r\n    const englishBooks = booksData.English;\r\n    setBooks(englishBooks);\r\n  }, []);\r\n\r\n  const getDownloadLink = (link) => {\r\n    return `https://www.gutenberg.org/cache/epub/${link}/pg${link}.txt`;\r\n  };\r\n\r\n  const downloadBook = async (book) => {\r\n    const downloadLink = getDownloadLink(book.link);\r\n\r\n    try {\r\n      // Faire une requête HTTP pour obtenir le fichier texte\r\n      const response = await axios.get(downloadLink, {\r\n        responseType: \"blob\", // Important: permet de traiter la réponse comme un fichier binaire\r\n      });\r\n\r\n      // Créer une URL pour le fichier téléchargé\r\n      const fileURL = window.URL.createObjectURL(new Blob([response.data]));\r\n      const fileLink = document.createElement(\"a\");\r\n      fileLink.href = fileURL;\r\n      fileLink.setAttribute(\"download\", `${book.Title}.txt`);\r\n\r\n      // Déclencher le téléchargement\r\n      document.body.appendChild(fileLink);\r\n      fileLink.click();\r\n      document.body.removeChild(fileLink);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du téléchargement du livre:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Books in English</h1>\r\n      <ul>\r\n        {books.map((book, index) => (\r\n          <li key={index}>\r\n            <h2>{book.Title}</h2>\r\n            <p>Author: {book.Author}</p>\r\n            {/* Au lieu d'un simple lien, on appelle la fonction downloadBook */}\r\n            <button onClick={() => downloadBook(book)}>Download TXT</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}